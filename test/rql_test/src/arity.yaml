desc: Test the arity of every function
tests:

    # TODO: add test for slice (should require two arguments)

    # Set up some data
    - def: db = r.db('test')
    - def: obj = r.expr({'a':1})
    - def: array = r.expr([1])
    - cd: db.table_create('test1')
      ot: ({'created':1})
      def: tbl = db.table('test1')

    - ot:
        js: err("RqlDriverError", "Expected 0 argument(s) but found 1.", [])
        rb: err("RqlCompileError", "Expected 0 argument(s) but found 1.", [])
        py: err_regex("TypeError", ".* takes no arguments .1 given.", [])
      cd:
      - r.db_list(1)

    - ot:
        js: err("RqlDriverError", "Expected 0 argument(s) but found 1.", [])
        rb: err("RqlCompileError", "Expected 1 argument(s) but found 2.", [])
        py: err_regex("TypeError", ".* takes exactly 1 argument .2 given.", [])
      cd:
      - db.table_list(1)
      - tbl.delete(1)
      - tbl.zip(1)
      - tbl.count(1)
      - tbl.distinct(1)

    - ot:
        js: err("RqlDriverError", "Expected 1 argument(s) but found 0.", [])
        rb: err("RqlCompileError", "Expected 1 argument(s) but found 0.", [])
        py: err_regex('TypeError', ".*takes exactly 1 argument \(0 given\)", [])
      cd:
      - r.db_create()
      - r.db_drop()
      - r.db()
      - r.error()
      - r.js()
    - ot:
        js: err("RqlDriverError", "Expected 1 argument(s) but found 0.", [])
        rb: err("ArgumentError", "wrong number of arguments (0 for 1)", [])
        py: err_regex('TypeError', ".*takes exactly 1 argument \(0 given\)", [])
      cd:
      - r.expr()
      - r.sum()
      - r.avg()
    - ot:
        js: err("RqlDriverError", "Expected 1 argument(s) but found 0.", [])
        rb: err("RqlCompileError", "Expected 2 argument(s) but found 1.", [])
        py: err_regex('TypeError', ".*takes exactly 2 arguments \(1 given\)", [])
      cd:
      - db.table_drop()
      - tbl.map()
      - tbl.concat_map()
      - tbl.skip()
      - tbl.limit()
      - array.append()
      - tbl.nth()
      - tbl.for_each()
      - tbl.filter()
      - tbl.get()
    - ot:
        js: err("RqlDriverError", "Expected 1 argument(s) but found 2.", [])
        rb: err("RqlCompileError", "Expected 1 argument(s) but found 2.", [])
        py: err_regex('TypeError', ".*takes exactly 1 argument \(2 given\)", [])
      cd:
      - r.db_create(1,2)
      - r.db_drop(1,2)
      - r.db(1,2)
      - r.error(1,2)
      - r.js(1,2)
    - ot:
        js: err("RqlDriverError", "Expected 1 argument(s) but found 2.", [])
        rb: err("ArgumentError", "wrong number of arguments (2 for 1)", [])
        py: err_regex('TypeError', ".*takes exactly 1 argument \(2 given\)", [])
      cd:
      - r.expr(1,2)
      - r.sum(1,2)
      - r.avg(1,2)
    - ot:
        js: err("RqlDriverError", "Expected 1 argument(s) but found 2.", [])
        rb: err("RqlCompileError", "Expected 2 argument(s) but found 3.", [])
        py: err_regex('TypeError', ".*takes exactly 2 arguments \(3 given\)", [])
      cd:
      - db.table_drop(1,2)
      - tbl.map(1,2)
      - tbl.concat_map(1,2)
      - tbl.skip(1,2)
      - tbl.limit(1,2)
      - array.append(1,2)
      - tbl.nth(1,2)
      - tbl.for_each(1,2)
      - tbl.filter(1,2)
      - tbl.get(1,2)

    - ot:
        js: err("RqlDriverError", "Expected 1 argument(s) but found 0.", [])
        rb: err("RqlCompileError", "Expected 2 argument(s) but found 1.", [])
        py: err_regex('TypeError', ".*takes at least 2 arguments \(1 given\)", [])
      cd:
      - tbl.update()
      - tbl.replace()
      - tbl.insert()
      - db.table_create()
      # - db.table() # TODO: theerror message for this in ruby is wrong
      - tbl.reduce()

    - ot:
        js: err("RqlDriverError", "Expected 2 argument(s) but found 0.", [])
        rb: err("RqlCompileError", "Expected 3 argument(s) but found 1.", [])
        py: err_regex('TypeError', ".*takes exactly 3 arguments \(1 given\)", [])
      cd:
      - tbl.inner_join()
      - tbl.outer_join()
      - tbl.eq_join()
    - ot:
        js: err("RqlDriverError", "Expected 2 argument(s) but found 1.", [])
        rb: err("RqlCompileError", "Expected 3 argument(s) but found 2.", [])
        py: err_regex('TypeError', ".*takes exactly 3 arguments \(2 given\)", [])
      cd:
      - tbl.inner_join(1)
      - tbl.outer_join(1)
      - tbl.eq_join(1)
    - ot:
        js: err("RqlDriverError", "Expected 2 argument(s) but found 3.", [])
        rb: err("RqlCompileError", "Expected 3 argument(s) but found 4.", [])
        py: err_regex('TypeError', ".*takes exactly 3 arguments \(4 given\)", [])
      cd:
      - tbl.inner_join(1,2,3)
      - tbl.outer_join(1,2,3)
      - tbl.eq_join(1,2,3)

    - ot:
        js: err("RqlDriverError", "Expected at least 2 argument(s) but found 0.", [])
        rb: err("RqlCompileError", "Invalid data collector.", [])
        py: err_regex('TypeError', ".*takes at least 3 arguments \(1 given\)", [])
      cd:
      - tbl.group_by()

    - ot:
        js: err("RqlDriverError", "Expected 3 argument(s) but found 2.", [])
        rb: err("RqlCompileError", "Expected 3 argument(s) but found 2.", [])
        py: err_regex('TypeError', ".*takes exactly 3 arguments \(2 given\)", [])
      cd: r.branch(1,2)
    - ot:
        js: err("RqlDriverError", "Expected 3 argument(s) but found 4.", [])
        rb: err("RqlCompileError", "Expected 3 argument(s) but found 4.", [])
        py: err_regex('TypeError', ".*takes exactly 3 arguments \(4 given\)", [])
      cd: r.branch(1,2,3,4)

    - ot:
        js: err("RqlDriverError", "Expected 3 argument(s) but found 2.", [])
        rb: err("RqlCompileError", "Expected 4 argument(s) but found 2.", [])
        py: err_regex('TypeError', ".*takes at least 4 arguments \(3 given\)", [])
      cd: tbl.grouped_map_reduce(1,2)

    # TODO: Math and logic
    # TODO: Upper bound on optional arguments
    # TODO: between, merge, slice

    # Clean up
    - cd: db.table_drop('test1')
      ot: ({'dropped':1})
